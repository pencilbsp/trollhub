import 'globals.css';

import { Fragment } from 'react';
import Script from 'next/script';
import dynamic from 'next/dynamic';
import type { Metadata } from 'next';
import { headers } from 'next/headers';
import { Inter } from 'next/font/google';
import { getServerSession } from 'next-auth/next';

import StoreProvider from '@/app/StoreProvider';

// context
import authOptions from '@/lib/auth';
import SettingsProvider from '@/contexts/settings-context';
// components
import Header from '@/components/header';
import SettingsDialog from '@/components/settings-dialog';
import { ThemeProvider } from '@/components/theme-provider';
import { NextAuthProvider } from '@/components/sections/auth-provider';

const PTOAds = dynamic(() => import('@/components/ads/pto-ads'));
const FlyiconAds = dynamic(() => import('@/components/ads/flyicon-ads'));

import GlobalNoti from '@/components/global-noti';
import { PTO_ADS_ID, METADATA_BASE, FLYICON_ADS_ID, GA_MEASUREMENT_ID, GALAKSION_ADS_SRC } from '@/config';

const inter = Inter({ subsets: ['latin'] });

declare global {
    namespace JSX {
        interface IntrinsicElements {
            [elemName: string]: any;
        }
    }
}

export const metadata: Metadata = {
    title: 'Troll with Fuhu',
    metadataBase: new URL(METADATA_BASE),
    description: 'Generated by pendev.cc',
};

export default async function RootLayout(props: { children: React.ReactNode }) {
    const headersList = headers();
    const isGoogleBot = headersList.get('x-is-googlebot');

    const { children } = props;
    const session = await getServerSession(authOptions);

    return (
        <html lang="vi" suppressHydrationWarning>
            <head>
                {isGoogleBot && GALAKSION_ADS_SRC && (
                    <Fragment>
                        <Script data-cfasync="false" async src={GALAKSION_ADS_SRC} />
                    </Fragment>
                )}
            </head>

            {isGoogleBot && GA_MEASUREMENT_ID && (
                <>
                    <Script src={`https://www.googletagmanager.com/gtag/js?id=${GA_MEASUREMENT_ID}`} />
                    <Script id="google-analytics">
                        {`
                        window.dataLayer = window.dataLayer || [];
                        function gtag(){dataLayer.push(arguments);}
                        gtag('js', new Date());

                        gtag('config', '${GA_MEASUREMENT_ID}');
                        `}
                    </Script>
                </>
            )}

            <body className={inter.className} suppressHydrationWarning>
                {isGoogleBot && PTO_ADS_ID && <PTOAds id={PTO_ADS_ID} />}
                {isGoogleBot && FLYICON_ADS_ID && <FlyiconAds id={FLYICON_ADS_ID} />}

                <StoreProvider>
                    <ThemeProvider attribute="class" defaultTheme="light" enableSystem disableTransitionOnChange>
                        <NextAuthProvider session={session}>
                            <SettingsProvider>
                                <SettingsDialog />
                                <GlobalNoti />
                                <div className="relative flex flex-col">
                                    <Header />
                                    {children}
                                </div>
                            </SettingsProvider>
                        </NextAuthProvider>
                    </ThemeProvider>
                </StoreProvider>
            </body>
        </html>
    );
}
